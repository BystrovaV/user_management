name: User Managment CI CD

on:
  push:
    branches: ["dev", "feature"]
  # pull_request:
    # branches: "dev"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '.'
    steps:
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v2

        - name: 'Login to GitHub Container Registry'
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{github.actor}}
            password: ${{secrets.GHCR}}

        - name: 'Build Inventory Image'
          run: |
            docker build . --tag ghcr.io/bystrovav/user_management:latest
            docker push ghcr.io/bystrovav/user_management:latest
    
  test:
    needs: build
    runs-on: ubuntu-latest
    # container:
    #     image: ghcr.io/bystrovav/user_management:latest
    #     credentials:
    #        username: ${{github.actor}}
    #        password: ${{secrets.GHCR}}
    #     env: 
    #       ENVIRONMENT: test
    #       DB_HOST: postgres

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: TestUserManagement
        ports:
          - 5432:5432
          
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v2
    
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Linters
        run: |
          python -m pip install black pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Black
        run: |
          black src
          black --check src

      - name: Test with pytest
        working-directory: ./src
        run: python -m pytest tests/units

      - name: Integration tests
        working-directory: ./src
        run: python -m pytest tests/integration
        env: 
          DB_USER: test
          DB_PASSWORD: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: TestUserManagement
